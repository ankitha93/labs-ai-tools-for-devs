/*
Docker Desktop tools API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oauthapi

import (
	"encoding/json"
)

// AuthResponse struct for AuthResponse
type AuthResponse struct {
	BrowserUrl *string `json:"browserUrl,omitempty"`
	AuthType   *string `json:"authType,omitempty"`
}

// NewAuthResponse instantiates a new AuthResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthResponse() *AuthResponse {
	this := AuthResponse{}
	return &this
}

// NewAuthResponseWithDefaults instantiates a new AuthResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthResponseWithDefaults() *AuthResponse {
	this := AuthResponse{}
	return &this
}

// GetBrowserUrl returns the BrowserUrl field value if set, zero value otherwise.
func (o *AuthResponse) GetBrowserUrl() string {
	if o == nil || o.BrowserUrl == nil {
		var ret string
		return ret
	}
	return *o.BrowserUrl
}

// GetBrowserUrlOk returns a tuple with the BrowserUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthResponse) GetBrowserUrlOk() (*string, bool) {
	if o == nil || o.BrowserUrl == nil {
		return nil, false
	}
	return o.BrowserUrl, true
}

// HasBrowserUrl returns a boolean if a field has been set.
func (o *AuthResponse) HasBrowserUrl() bool {
	if o != nil && o.BrowserUrl != nil {
		return true
	}

	return false
}

// SetBrowserUrl gets a reference to the given string and assigns it to the BrowserUrl field.
func (o *AuthResponse) SetBrowserUrl(v string) {
	o.BrowserUrl = &v
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *AuthResponse) GetAuthType() string {
	if o == nil || o.AuthType == nil {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthResponse) GetAuthTypeOk() (*string, bool) {
	if o == nil || o.AuthType == nil {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *AuthResponse) HasAuthType() bool {
	if o != nil && o.AuthType != nil {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *AuthResponse) SetAuthType(v string) {
	o.AuthType = &v
}

func (o AuthResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BrowserUrl != nil {
		toSerialize["browserUrl"] = o.BrowserUrl
	}
	if o.AuthType != nil {
		toSerialize["authType"] = o.AuthType
	}
	return json.Marshal(toSerialize)
}

type NullableAuthResponse struct {
	value *AuthResponse
	isSet bool
}

func (v NullableAuthResponse) Get() *AuthResponse {
	return v.value
}

func (v *NullableAuthResponse) Set(val *AuthResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthResponse(val *AuthResponse) *NullableAuthResponse {
	return &NullableAuthResponse{value: val, isSet: true}
}

func (v NullableAuthResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
