openapi: 3.0.3
info:
  version: 0.0.0
  title: Docker Desktop secrets API
  description: This Docker Desktop API manages user secrets to be injected in containers.
  x-redocly-package-name: secrets
tags:
  - name: secrets
paths:
  /secrets:
    post:
      summary: sets a secret value
      tags: [ secrets ]
      operationId: setJfsSecret
      requestBody:
        description: the secret to be set
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
      responses:
        '200':
          description: success
        '500':
          description: unexpected error
    get:
      summary: lists all secrets
      tags: [ secrets ]
      operationId: listJfsSecrets
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoredSecret'
        '500':
          description: unexpected error
  /secrets/{secret}:
    get:
      summary: checks if a secret exists
      tags: [ secrets ]
      operationId: getJfsSecret
      parameters:
        - name: secret
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '404':
          description: secret not found
    delete:
      summary: deletes a secret
      tags: [ secrets ]
      operationId: deleteJfsSecret
      parameters:
        - name: secret
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: success
        '500':
          description: unexpected error
  /policies:
    post:
      summary: sets the policy
      tags: [ secrets ]
      operationId: setJfsPolicy
      requestBody:
        description: the policy to be set
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
      responses:
        '200':
          description: success
        '500':
          description: unexpected error
    get:
      summary: lists all policies
      tags: [ secrets ]
      operationId: listJfsPolicies
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Policy'
        '500':
          description: unexpected error
  /policies/{policy}:
    get:
      summary: retrieves a policy
      tags: [ secrets ]
      operationId: getJfsPolicy
      parameters:
        - name: policy
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '404':
          description: policy not found
    delete:
      summary: deletes a policy
      tags: [ secrets ]
      operationId: deleteJfsPolicy
      parameters:
        - name: policy
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: success
        '500':
          description: unexpected error
components:
  schemas:
    Secret:
      type: object
      properties:
        name:
          type: string
          description: the name of the secret
        value:
          type: string
          description: the value of the secret
        policies:
          type: array
          items:
            type: string
          description: the list of policy names associated with the secret
      required:
        - name
        - value
    StoredSecret:
      type: object
      properties:
        name:
          type: string
          description: the name of the secret
        policies:
          type: array
          items:
            type: string
          description: the list of policy names associated with the secret
      required:
        - name
        - policies
    Policy:
      type: object
      properties:
        name:
          type: string
          description: the name of the policy
        images:
          type: array
          items:
            type: string
          description: the list of images allowed by the policy
      required:
        - name